{"ast":null,"code":"import _objectSpread from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/React.js-To-Do-List-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as _getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n\n        _this._request = null;\n\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          _this2._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          _this2._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = /* #__PURE__ */new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animationOptions = Object.keys(defaults.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    var visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  var _iterator3 = _createForOfIteratorHelper(items),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n\n      if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n        delete stacks[axis]._visualValues[datasetIndex];\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n\n      this._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n          data = this._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]._visualValues\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = this._getOtherScale(scale);\n\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return _this3.getContext(index, active, mode);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n\n      var _iterator4 = _createForOfIteratorHelper(this._syncList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n            method = _args2[0],\n            arg1 = _args2[1],\n            arg2 = _args2[2];\n\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      var newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\n_defineProperty(DatasetController, \"defaults\", {});\n\n_defineProperty(DatasetController, \"datasetElementType\", null);\n\n_defineProperty(DatasetController, \"dataElementType\", null);\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  var _borderProps = borderProps(properties),\n      start = _borderProps.start,\n      end = _borderProps.end,\n      reverse = _borderProps.reverse,\n      top = _borderProps.top,\n      bottom = _borderProps.bottom;\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  var _super = _createSuper(BarController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n          vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = this._getRuler();\n\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio.sharedOptions,\n          includeOptions = _this$_getSharedOptio.includeOptions;\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n\n      var _iterator5 = _createForOfIteratorHelper(metasets),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var meta = _step5.value;\n\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n          vScale = _this$_cachedMeta.vScale,\n          _stacked = _this$_cachedMeta._stacked,\n          datasetIndex = _this$_cachedMeta.index,\n          _this$options = this.options,\n          baseValue = _this$options.base,\n          minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n\n        if (_stacked && !floating) {\n          parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\n_defineProperty(BarController, \"id\", 'bar');\n\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  var _super2 = _createSuper(BubbleController);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n          iScale = _this$_cachedMeta2.iScale,\n          vScale = _this$_cachedMeta2.vScale;\n\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio2.sharedOptions,\n          includeOptions = _this$_getSharedOptio2.includeOptions;\n\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\n_defineProperty(BubbleController, \"id\", 'bubble');\n\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  var _super3 = _createSuper(DoughnutController);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n              key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n\n        var i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      var chartWeight = this._getRingWeight(this.index);\n\n      var _this$_getRotationExt = this._getRotationExtents(),\n          circumference = _this$_getRotationExt.circumference,\n          rotation = _this$_getRotationExt.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n\n      var circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio3.sharedOptions,\n          includeOptions = _this$_getSharedOptio3.includeOptions;\n\n      var startAngle = this._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash');\n  }\n});\n\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n                pointStyle = _chart$legend$options2.pointStyle,\n                color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  var _super4 = _createSuper(LineController);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n          iScale = _this$_cachedMeta3.iScale,\n          vScale = _this$_cachedMeta3.vScale,\n          _stacked = _this$_cachedMeta3._stacked,\n          _dataset = _this$_cachedMeta3._dataset;\n\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio4.sharedOptions,\n          includeOptions = _this$_getSharedOptio4.includeOptions;\n\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n          spanGaps = _this$options2.spanGaps,\n          segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n\n        var parsed = this.getParsed(i);\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\n_defineProperty(LineController, \"id\", 'line');\n\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  var _super5 = _createSuper(PolarAreaController);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n                pointStyle = _chart$legend$options3.pointStyle,\n                color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  var _super6 = _createSuper(PieController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return _createClass(PieController);\n}(DoughnutController);\n\n_defineProperty(PieController, \"id\", 'pie');\n\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  var _super7 = _createSuper(RadarController);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\n_defineProperty(RadarController, \"id\", 'radar');\n\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\n\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n\n  var _super8 = _createSuper(ScatterController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n          points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      if (this.options.showLine) {\n        var line = meta.dataset,\n            _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n          iScale = _this$_cachedMeta4.iScale,\n          vScale = _this$_cachedMeta4.vScale,\n          _stacked = _this$_cachedMeta4._stacked,\n          _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n          spanGaps = _this$options3.spanGaps,\n          segment = _this$options3.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n\n      if (!this.options.showLine) {\n        var max = 0;\n\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n\n        return max > 0 && max;\n      }\n\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n\n  return ScatterController;\n}(DatasetController);\n\n_defineProperty(ScatterController, \"id\", 'scatter');\n\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nvar DateAdapterBase = /*#__PURE__*/function () {\n  function DateAdapterBase(options) {\n    _classCallCheck(this, DateAdapterBase);\n\n    _defineProperty(this, \"options\", void 0);\n\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  _createClass(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return abstract();\n    }\n  }], [{\n    key: \"override\",\n    value:\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n\n  return DateAdapterBase;\n}();\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n        _index2 = _metasets$i.index,\n        data = _metasets$i.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n        startAngle = _element$getProps.startAngle,\n        endAngle = _element$getProps.endAngle;\n\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    }),\n        angle = _getAngleFromPoint.angle;\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  var stacks = {};\n\n  var _iterator6 = _createForOfIteratorHelper(layouts),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var wrap = _step6.value;\n      var stack = wrap.stack,\n          pos = wrap.pos,\n          stackWeight = wrap.stackWeight;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n      hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n      box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n      y = chartArea.y;\n\n  var _iterator7 = _createForOfIteratorHelper(boxes),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var layout = _step7.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n\n        var _width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  var _super9 = _createSuper(BasicPlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition = getRelativePosition(event, chart),\n      x = _getRelativePosition.x,\n      y = _getRelativePosition.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator8 = _createForOfIteratorHelper(nodeList),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var node = _step8.value;\n\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator9 = _createForOfIteratorHelper(entries),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator10 = _createForOfIteratorHelper(entries),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var entry = _step10.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  var _super10 = _createSuper(DomPlatform);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"active\", false);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"$animations\", void 0);\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\n_defineProperty(Element, \"defaults\", {});\n\n_defineProperty(Element, \"defaultRoutes\", undefined);\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nvar getTicksLimit = function getTicksLimit(ticksLength, maxTicksLimit) {\n  return Math.min(maxTicksLimit || ticksLength, ticksLength);\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right,\n      chart = scale.chart;\n  var chartArea = chart.chartArea,\n      scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  var _super11 = _createSuper(Scale);\n\n  function Scale(cfg) {\n    var _this9;\n\n    _classCallCheck(this, Scale);\n\n    _this9 = _super11.call(this);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n          min = _this$getUserBounds.min,\n          max = _this$getUserBounds.max,\n          minDefined = _this$getUserBounds.minDefined,\n          maxDefined = _this$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"getLabelItems\",\n    value: function getLabelItems() {\n      var chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      return items;\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n          beginAtZero = _this$options4.beginAtZero,\n          grace = _this$options4.grace,\n          tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n          _this$options5 = this.options,\n          tickOpts = _this$options5.ticks,\n          titleOpts = _this$options5.title,\n          gridOpts = _this$options5.grid;\n\n      var display = this._isVisible();\n\n      var isHorizontal = this.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n              first = _this$_getLabelSizes.first,\n              last = _this$_getLabelSizes.last,\n              widest = _this$_getLabelSizes.widest,\n              highest = _this$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n          _this$options6$ticks = _this$options6.ticks,\n          align = _this$options6$ticks.align,\n          padding = _this$options6$ticks.padding,\n          position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n          axis = _this$options7.axis,\n          position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length, maxTicksLimit) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; i += increment) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = this._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n          position = options.position,\n          border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          label: label,\n          font: font,\n          textOffset: textOffset,\n          options: {\n            rotation: rotation,\n            color: color,\n            strokeColor: strokeColor,\n            strokeWidth: strokeWidth,\n            textAlign: tickTextAlign,\n            textBaseline: textBaseline,\n            translation: [x, y],\n            backdrop: backdrop\n          }\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n          position = _this$options8.position,\n          ticks = _this$options8.ticks;\n      var rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n          position = _this$options9.position,\n          _this$options9$ticks = _this$options9.ticks,\n          crossAlign = _this$options9$ticks.crossAlign,\n          mirror = _this$options9$ticks.mirror,\n          padding = _this$options9$ticks.padding;\n\n      var labelSizes = this._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = this.chart;\n      var position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n          ctx = this.ctx,\n          _this$options10 = this.options,\n          border = _this$options10.border,\n          grid = _this$options10.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = this.ctx;\n\n      var area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = this.getLabelItems(chartArea);\n\n      var _iterator11 = _createForOfIteratorHelper(items),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var item = _step11.value;\n          var renderTextOptions = item.options;\n          var tickFont = item.font;\n          var label = item.label;\n          var y = item.textOffset;\n          renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options11 = this.options,\n          position = _this$options11.position,\n          title = _this$options11.title,\n          reverse = _this$options11.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      var bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n\n          _this10.drawGrid(chartArea);\n\n          _this10.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = /* #__PURE__ */new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      var result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator12 = _createForOfIteratorHelper(descriptors),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var descriptor = _step12.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n      localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n\n  var _iterator13 = _createForOfIteratorHelper(plugins),\n      _step13;\n\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var plugin = _step13.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n\n      if (opts === null) {\n        continue;\n      }\n\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n      local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n\n  for (var _len11 = arguments.length, scaleOptions = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    scaleOptions[_key11 - 1] = arguments[_key11];\n  }\n\n  for (var _i2 = 0, _scaleOptions = scaleOptions; _i2 < _scaleOptions.length; _i2++) {\n    var opts = _scaleOptions[_i2];\n    var axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n\n    if (axis) {\n      return axis;\n    }\n  }\n\n  throw new Error(\"Cannot determine type of '\".concat(id, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis: axis\n    };\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    var boundDs = config.data.datasets.filter(function (d) {\n      return d.xAxisID === id || d.yAxisID === id;\n    });\n\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n\n    var axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator14 = _createForOfIteratorHelper(names),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var prop = _step14.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator15 = _createForOfIteratorHelper(names),\n      _step15;\n\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var prop = _step15.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n\n  return false;\n}\n\nvar version = \"4.3.0\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale;\n\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n\n    _classCallCheck(this, Chart);\n\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options12 = this.options,\n          aspectRatio = _this$options12.aspectRatio,\n          maintainAspectRatio = _this$options12.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n\n      var metasets = this._metasets,\n          datasets = this.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n            controller = _this$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      var _active = this._active,\n          _lastEvent = this._lastEvent;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n\n      var _iterator16 = _createForOfIteratorHelper(changes),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var _step16$value = _step16.value,\n              method = _step16$value.method,\n              start = _step16$value.start,\n              count = _step16$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n\n      var changeSet = makeSet(0);\n\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, isFunction(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n            width = _this$_resizeBeforeDr.width,\n            height = _this$_resizeBeforeDr.height;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = this.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = getDatasetArea(meta) || this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n          ctx = this.ctx;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n\n      var listeners = this._listeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        _this18._eventHandler(e);\n      };\n\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        _this19.attached = true;\n\n        _this19.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        _this19.attached = false;\n\n        _remove('resize', listener);\n\n        _this19._stop();\n\n        _this19._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n            index = _ref4.index;\n\n        var meta = _this21.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n          lastActive = _this$_active === void 0 ? [] : _this$_active,\n          options = this.options;\n      var useFinalPosition = replay;\n\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      var isClick = _isClickEvent(e);\n\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n\n  return Chart;\n}();\n\n_defineProperty(Chart, \"defaults\", defaults);\n\n_defineProperty(Chart, \"instances\", instances);\n\n_defineProperty(Chart, \"overrides\", overrides);\n\n_defineProperty(Chart, \"registry\", registry);\n\n_defineProperty(Chart, \"version\", version);\n\n_defineProperty(Chart, \"getChart\", getChart);\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference,\n      options = element.options;\n  var borderWidth = options.borderWidth,\n      borderJoinStyle = options.borderJoinStyle,\n      borderDash = options.borderDash,\n      borderDashOffset = options.borderDashOffset;\n  var inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  var _super12 = _createSuper(ArcElement);\n\n  function ArcElement(cfg) {\n    var _this23;\n\n    _classCallCheck(this, ArcElement);\n\n    _this23 = _super12.call(this);\n\n    _defineProperty(_assertThisInitialized(_this23), \"circumference\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"endAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"fullCircles\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"innerRadius\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"outerRadius\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"pixelMargin\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"startAngle\", void 0);\n\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n\n    return _this23;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint2.angle,\n          distance = _getAngleFromPoint2.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options13 = this.options,\n          offset = _this$options13.offset,\n          spacing = _this$options13.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n          circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\n_defineProperty(ArcElement, \"id\", 'arc');\n\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n\n_defineProperty(ArcElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash';\n  }\n});\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref5 = params || {},\n      _ref5$move = _ref5.move,\n      move = _ref5$move === void 0 ? true : _ref5$move,\n      reverse = _ref5.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref6 = params || {},\n      _ref6$move = _ref6.move,\n      move = _ref6$move === void 0 ? true : _ref6$move,\n      reverse = _ref6.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator17 = _createForOfIteratorHelper(segments),\n      _step17;\n\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var segment = _step17.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  var _super13 = _createSuper(LineElement);\n\n  function LineElement(cfg) {\n    var _this24;\n\n    _classCallCheck(this, LineElement);\n\n    _this24 = _super13.call(this);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n\n    return _this24;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n\n      var segmentMethod = _getSegmentMethod(this);\n\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      var _iterator18 = _createForOfIteratorHelper(segments),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var segment = _step18.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n\n        _draw(ctx, this, start, count);\n\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\n_defineProperty(LineElement, \"id\", 'line');\n\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  var _super14 = _createSuper(PointElement);\n\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n  function PointElement(cfg) {\n    var _this25;\n\n    _classCallCheck(this, PointElement);\n\n    _this25 = _super14.call(this);\n\n    _defineProperty(_assertThisInitialized(_this25), \"parsed\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this25), \"skip\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this25), \"stop\", void 0);\n\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n\n    return _this25;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\n_defineProperty(PointElement, \"id\", 'point');\n\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  var _super15 = _createSuper(BarElement);\n\n  function BarElement(cfg) {\n    var _this26;\n\n    _classCallCheck(this, BarElement);\n\n    _this26 = _super15.call(this);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n\n    return _this26;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n          _this$options14 = this.options,\n          borderColor = _this$options14.borderColor,\n          backgroundColor = _this$options14.backgroundColor;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\n_defineProperty(BarElement, \"id\", 'bar');\n\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nvar BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBorderColor(i++);\n  });\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBackgroundColor(i++);\n  });\n  return i;\n}\n\nfunction getColorizer(chart) {\n  var i = 0;\n  return function (dataset, datasetIndex) {\n    var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    var _chart$config = chart.config,\n        datasets = _chart$config.data.datasets,\n        chartOptions = _chart$config.options;\n    var elements = chartOptions.elements;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n      return;\n    }\n\n    var colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi3.start,\n          count = _getStartAndCountOfVi3.count;\n\n      var threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator19 = _createForOfIteratorHelper(segments),\n      _step19;\n\n  try {\n    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n      var segment = _step19.value;\n      var start = segment.start,\n          end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator20 = _createForOfIteratorHelper(targetSegments),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var tgt = _step20.value;\n\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator21 = _createForOfIteratorHelper(fillSources),\n              _step21;\n\n          try {\n            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n              var fillSource = _step21.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator21.e(err);\n          } finally {\n            _iterator21.f();\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n  } catch (err) {\n    _iterator19.e(err);\n  } finally {\n    _iterator19.f();\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n      _ref7$x = _ref7.x,\n      x = _ref7$x === void 0 ? null : _ref7$x,\n      _ref7$y = _ref7.y,\n      y = _ref7$y === void 0 ? null : _ref7$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n        end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction _getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n\n  var pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n\n  var value = _getTargetValue(fill, scale, start);\n\n  var target = [];\n\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref9 = fillOption || {},\n      _ref9$above = _ref9.above,\n      above = _ref9$above === void 0 ? color : _ref9$above,\n      _ref9$below = _ref9.below,\n      below = _ref9$below === void 0 ? color : _ref9$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n      points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n\n  var _iterator22 = _createForOfIteratorHelper(segments),\n      _step22;\n\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var segment = _step22.value;\n      var start = segment.start,\n          end = segment.end;\n      var firstPoint = points[start];\n\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator23 = _createForOfIteratorHelper(segments),\n      _step23;\n\n  try {\n    for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n      var _step23$value = _step23.value,\n          src = _step23$value.source,\n          tgt = _step23$value.target,\n          start = _step23$value.start,\n          end = _step23$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator23.e(err);\n  } finally {\n    _iterator23.f();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref10 = bounds || {},\n      property = _ref10.property,\n      start = _ref10.start,\n      end = _ref10.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  var _super16 = _createSuper(Legend);\n\n  function Legend(config) {\n    var _this27;\n\n    _classCallCheck(this, Legend);\n\n    _this27 = _super16.call(this);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n          ctx = this.ctx;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = this._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxWidth = this.maxWidth,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n          maxHeight = this.maxHeight,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n            itemWidth = _calculateItemSize.itemWidth,\n            itemHeight = _calculateItemSize.itemHeight;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      var titleHeight = this._computeTitleHeight();\n\n      var hitboxes = this.legendHitBoxes,\n          _this$options15 = this.options,\n          align = _this$options15.align,\n          padding = _this$options15.labels.padding,\n          rtl = _this$options15.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        var _iterator24 = _createForOfIteratorHelper(hitboxes),\n            _step24;\n\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var hitbox = _step24.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        var _iterator25 = _createForOfIteratorHelper(hitboxes),\n            _step25;\n\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _hitbox = _step25.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n\n      var opts = this.options,\n          columnSizes = this.columnSizes,\n          lineWidths = this.lineWidths,\n          ctx = this.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = this.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color,\n            useBorderRadius = _chart$legend$options.useBorderRadius,\n            borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  var _super17 = _createSuper(Title);\n\n  function Title(config) {\n    var _this30;\n\n    _classCallCheck(this, Title);\n\n    _this30 = _super17.call(this);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n\n      var _this$_drawArgs = this._drawArgs(offset),\n          titleX = _this$_drawArgs.titleX,\n          titleY = _this$_drawArgs.titleY,\n          maxWidth = _this$_drawArgs.maxWidth,\n          rotation = _this$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n      topLeft = _toTRBLCorners.topLeft,\n      topRight = _toTRBLCorners.topRight,\n      bottomLeft = _toTRBLCorners.bottomLeft,\n      bottomRight = _toTRBLCorners.bottomRight;\n\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar defaultCallbacks = {\n  beforeTitle: noop,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    var label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    var value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  var _super18 = _createSuper(Tooltip);\n\n  function Tooltip(config) {\n    var _this31;\n\n    _classCallCheck(this, Tooltip);\n\n    _this31 = _super18.call(this);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this32, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this33, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this33, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n          cornerRadius = options.cornerRadius;\n\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n          topLeft = _toTRBLCorners2.topLeft,\n          topRight = _toTRBLCorners2.topRight,\n          bottomLeft = _toTRBLCorners2.bottomLeft,\n          bottomRight = _toTRBLCorners2.bottomRight;\n\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColor = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.fillStyle = labelColor.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColor.borderWidth))) : labelColor.borderWidth || 1;\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.setLineDash(labelColor.borderDash || []);\n        ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n          topLeft = _toTRBLCorners3.topLeft,\n          topRight = _toTRBLCorners3.topRight,\n          bottomLeft = _toTRBLCorners3.bottomLeft,\n          bottomRight = _toTRBLCorners3.bottomRight;\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n            index = _ref11.index;\n\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      var positionChanged = this._positionChanged(active, e);\n\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\n_defineProperty(Tooltip, \"positioners\", positioners);\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread(_objectSpread({}, args), {}, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  var _super19 = _createSuper(CategoryScale);\n\n  function CategoryScale(cfg) {\n    var _this35;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this35 = _super19.call(this, cfg);\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n\n      if (added.length) {\n        var labels = this.getLabels();\n\n        var _iterator26 = _createForOfIteratorHelper(added),\n            _step26;\n\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var _step26$value = _step26.value,\n                _index3 = _step26$value.index,\n                label = _step26$value.label;\n\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n\n        this._addedLabels = [];\n      }\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n          minDefined = _this$getUserBounds2.minDefined,\n          maxDefined = _this$getUserBounds2.maxDefined;\n\n      var _this$getMinMax = this.getMinMax(true),\n          min = _this$getMinMax.min,\n          max = _this$getMinMax.max;\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\n_defineProperty(CategoryScale, \"id\", 'category');\n\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    var tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n\n    ticks.push({\n      value: tickValue\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n      minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  var _super20 = _createSuper(LinearScaleBase);\n\n  function LinearScaleBase(cfg) {\n    var _this36;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this36 = _super20.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n\n      var _this$getUserBounds3 = this.getUserBounds(),\n          minDefined = _this$getUserBounds3.minDefined,\n          maxDefined = _this$getUserBounds3.maxDefined;\n\n      var min = this.min,\n          max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  var _super21 = _createSuper(LinearScale);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _super21.apply(this, arguments);\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n          min = _this$getMinMax2.min,\n          max = _this$getMinMax2.max;\n\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\n_defineProperty(LinearScale, \"id\", 'linear');\n\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\n\nvar log10Floor = function log10Floor(v) {\n  return Math.floor(log10(v));\n};\n\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, _ref13) {\n  var min = _ref13.min,\n      max = _ref13.max;\n  min = finiteOrDefault(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  var lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  var _super22 = _createSuper(LogarithmicScale);\n\n  function LogarithmicScale(cfg) {\n    var _this37;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this37 = _super22.call(this, cfg);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n          min = _this$getMinMax3.min,\n          max = _this$getMinMax3.max;\n\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n          minDefined = _this$getUserBounds4.minDefined,\n          maxDefined = _this$getUserBounds4.maxDefined;\n\n      var min = this.min;\n      var max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  var outerDistance = scale.drawingArea;\n  var extra = itemOpts.extra,\n      additionalAngle = itemOpts.additionalAngle,\n      padding = itemOpts.padding,\n      size = itemOpts.size;\n  var pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  var y = yForAngle(pointLabelPosition.y, size.h, angle);\n  var textAlign = getTextAlignForAngle(angle);\n  var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y: y,\n    textAlign: textAlign,\n    left: left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n\n  var left = item.left,\n      top = item.top,\n      right = item.right,\n      bottom = item.bottom;\n\n  var apexesInArea = _isPointInArea({\n    x: left,\n    y: top\n  }, area) || _isPointInArea({\n    x: left,\n    y: bottom\n  }, area) || _isPointInArea({\n    x: right,\n    y: top\n  }, area) || _isPointInArea({\n    x: right,\n    y: bottom\n  }, area);\n\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var _opts$pointLabels = opts.pointLabels,\n      centerPointLabels = _opts$pointLabels.centerPointLabels,\n      display = _opts$pointLabels.display;\n  var itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  var area;\n\n  for (var i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    var item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  var left = item.left,\n      top = item.top,\n      right = item.right,\n      bottom = item.bottom;\n  var backdropColor = opts.backdropColor;\n\n  if (!isNullOrUndef(backdropColor)) {\n    var borderRadius = toTRBLCorners(opts.borderRadius);\n    var padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    var backdropLeft = left - padding.left;\n    var backdropTop = top - padding.top;\n    var backdropWidth = right - left + padding.width;\n    var backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(function (v) {\n      return v !== 0;\n    })) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var item = scale._pointLabelItems[i];\n\n    if (!item.visible) {\n      continue;\n    }\n\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    var plFont = toFont(optsAtIndex.font);\n    var x = item.x,\n        y = item.y,\n        textAlign = item.textAlign;\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  var _super23 = _createSuper(RadialLinearScale);\n\n  function RadialLinearScale(cfg) {\n    var _this38;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this38 = _super23.call(this, cfg);\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n          min = _this$getMinMax4.min,\n          max = _this$getMinMax4.max;\n\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options16 = this.options,\n          backgroundColor = _this$options16.backgroundColor,\n          circular = _this$options16.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid,\n          border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n\n            var context = _this40.getContext(index);\n\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\n\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  var _super24 = _createSuper(TimeScale);\n\n  function TimeScale(props) {\n    var _this42;\n\n    _classCallCheck(this, TimeScale);\n\n    _this42 = _super24.call(this, props);\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _this$getUserBounds5 = this.getUserBounds(),\n          min = _this$getUserBounds5.min,\n          max = _this$getUserBounds5.max,\n          minDefined = _this$getUserBounds5.minDefined,\n          maxDefined = _this$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = this.min;\n      var max = this.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var fmt = _format || formats[unit];\n      return this._adapter.format(value, fmt);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n\n      if (formatter) {\n        return callback(formatter, [time, index, ticks], this);\n      }\n\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      var size = this._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\n_defineProperty(TimeScale, \"id\", 'time');\n\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  var _super25 = _createSuper(TimeSeriesScale);\n\n  function TimeSeriesScale(props) {\n    var _this43;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this43 = _super25.call(this, props);\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\n\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","init","formats","format","diff","startOf","endOf","members","prototype","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","capBezierPoints","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","_zero","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.animator.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.animation.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.animations.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.datasetController.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.line.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.adapters.ts","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.interaction.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.layouts.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\platform\\platform.base.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\platform\\platform.basic.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\platform\\platform.dom.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\platform\\index.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.element.ts","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.scale.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.registry.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.plugins.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.config.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\core\\core.controller.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\elements\\element.arc.ts","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\elements\\element.line.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\elements\\element.point.ts","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\elements\\element.bar.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.category.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.linear.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.time.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","E:\\React.js-To-Do-List-main\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module"}